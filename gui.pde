/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:379944:
  appc.background(230);
} //_CODE_:window1:379944:

public void VolatilityChange(GCustomSlider source, GEvent event) { //_CODE_:volatilitySlider:600926:
  volatility = volatilitySlider.getValueF();
} //_CODE_:volatilitySlider:600926:

public void sentimentChange(GCustomSlider source, GEvent event) { //_CODE_:sentimentSlider:813129:
  sentimentSlide = sentimentSlider.getValueF();
} //_CODE_:sentimentSlider:813129:

public void periodSlide(GCustomSlider source, GEvent event) { //_CODE_:periodSlider:498802:
  periodNumber = periodSlider.getValueI();
} //_CODE_:periodSlider:498802:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 300, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  volatilitySlider = new GCustomSlider(window1, 60, 30, 167, 40, "grey_blue");
  volatilitySlider.setLimits(1, 0, 30);
  volatilitySlider.setShowTicks(true);
  volatilitySlider.setNumberFormat(G4P.INTEGER, 0);
  volatilitySlider.setOpaque(false);
  volatilitySlider.addEventHandler(this, "VolatilityChange");
  sentimentSlider = new GCustomSlider(window1, 60, 120, 167, 40, "grey_blue");
  sentimentSlider.setLimits(0, -5, 5);
  sentimentSlider.setNumberFormat(G4P.INTEGER, 0);
  sentimentSlider.setOpaque(false);
  sentimentSlider.addEventHandler(this, "sentimentChange");
  label1 = new GLabel(window1, 110, 100, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Sentiment");
  label1.setOpaque(false);
  label2 = new GLabel(window1, 110, 10, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Volatility");
  label2.setOpaque(false);
  label3 = new GLabel(window1, -10, 130, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("PANIC");
  label3.setLocalColorScheme(GCScheme.RED_SCHEME);
  label3.setOpaque(false);
  label4 = new GLabel(window1, 220, 130, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("PARTY");
  label4.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label4.setOpaque(false);
  periodSlider = new GCustomSlider(window1, 60, 210, 170, 40, "grey_blue");
  periodSlider.setShowValue(true);
  periodSlider.setLimits(1, 1, 4);
  periodSlider.setNumberFormat(G4P.INTEGER, 0);
  periodSlider.setOpaque(false);
  periodSlider.addEventHandler(this, "periodSlide");
  label5 = new GLabel(window1, 110, 190, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Period");
  label5.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GCustomSlider volatilitySlider; 
GCustomSlider sentimentSlider; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GLabel label4; 
GCustomSlider periodSlider; 
GLabel label5; 
